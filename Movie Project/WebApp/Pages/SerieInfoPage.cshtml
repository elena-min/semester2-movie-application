@page
@using DAL;
@using LogicLayer.Classes;
@using LogicLayer.Controllers;
@using LogicLayer.Interfaces;
@model WebApp.Pages.SerieInfoPageModel
@{
    Layout = "_LayoutMain";
    @functions {
        static IReviewDAL iReviewDAL = new ReviewDAL();
        static ReviewController reviewController = new ReviewController(iReviewDAL);
        static IMediaItemDAL iMediaItemDAL = new MediaItemDAL();
        static MediaItemController mediaController = new MediaItemController(iMediaItemDAL);
        static IUserDAL iuserDAL = new UserDAL();
        static UserController userController = new UserController(iuserDAL);
    }
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}
<main class="movie-info">
    <div class="main-movie-info">
        <div class="information">
            <div id="info1">
                <h2><b>@Model.Serie.Title</b></h2><br>
                <h6><i>@(((Serie)Model.Serie).Seasons.ToString()) seasons</i></h6>
            </div>

            <div class="ratings">
                <div id="rating">
                    <p><b>RATING:</b> </p>
                    <div class="ratingIMG">
                        <img src="/images/icons8-rating-48.png" alt="img" style="padding:5px">
                        <p>@Model.Serie.Rating /10</p>
                    </div>

                </div>
                <div id="userRating">
                    <p><b>USER RATING:</b> </p>
                    <div class="ratingIMG">
                        <img src="/images/icons8-review-48.png" alt="img" style="padding:5px">
                        @{
                            if (mediaController.GetAllGivenRatings(@Model.Serie.GetId()).Length != 0)
                            {
                                foreach (int rating in mediaController.GetAllGivenRatings(@Model.Serie.GetId()))
                                {
                                    Model.Serie.AddRating(rating);
                                }
                                <p>@Model.Serie.CalculateAverageRating() /10</p>
                            }
                            else
                            {
                                <p>None.</p>
                            }
                        }
                    </div>

                </div>
                <div id="userRatingNr">
                    <p><b>RATINGS NR:</b> </p>
                    <div class="ratingIMG">
                        <img src="/images/icons8-review-50.png" alt="img" style="padding:5px">
                        @{
                            if (mediaController.GetAllGivenRatings(@Model.Serie.GetId()).Length != 0)
                            {
                                foreach (int rating in mediaController.GetAllGivenRatings(@Model.Serie.GetId()))
                                {
                                    Model.Serie.AddRating(rating);
                                }
                                <p>@Model.Serie.GetAllRatings().Length.ToString()</p>
                            }
                            else
                            {
                                <p>None.</p>
                            }
                        }
                    </div>

                </div>

            </div>
            <div></div>
            <p><b>Description:</b></p>
            <p>@Model.Serie.Description</p>
            @{
                string genresString = string.Join(", ", Model.Serie.GetAllGenres());
            }
            <p><b>Genres :</b> @genresString</p>
            <p><b>Cast :</b> @Model.Serie.Cast.ToString()</p>
            <p><b>Country of origin :</b> @Model.Serie.CountryOfOrigin</p>
            <p><b>Seasons : </b>@(((Serie)Model.Serie).Seasons.ToString())</p>
            <p><b>Episodes : </b>@(((Serie)Model.Serie).Episodes.ToString())</p>

            @{
                if (mediaController.GetAllGivenRatings(@Model.Serie.GetId()).Length != 0)
                {
                    foreach (int rating in mediaController.GetAllGivenRatings(@Model.Serie.GetId()))
                    {
                        Model.Serie.AddRating(rating);
                    }
                    <p>
                        <b> User given rating:</b> @Model.Serie.CalculateAverageRating()

                    </p>
                }
                else
                {
                    <p> <b>User given rating:</b> no reviews yet.</p>
                }
            }
        </div>
        <div class="cover">
            <img src="data:image;base64,@mediaController.GetMediaItemImageByID(@Model.Serie.GetId())" alt="Movie cover" style="padding:10px">
        </div>
    </div>
    
    @if (User.Identity.IsAuthenticated)
    {

        <br />
        <div class="mediaButtons">
            <div id="writeReview">
                <a asp-page="/ReviewPage" asp-route-movieId="@Model.Serie.GetId()"><b>Write a review</b></a>
            </div>
            <form method="post">
                <button type="submit" name="serieId" value="@Model.Serie.GetId()"><b>Add to Favorites</b></button>
            </form>
        </div>
        

    }

    <div style="width: 80%; margin: auto;">
        <canvas id="popularityChart" width="400" height="200"></canvas>
    </div>


</main>
<br>

<h3>All written Reviews</h3>
<div id="reviewsContainers">
    @foreach (Review review in reviewController.GetReviewsByMediaItem(@Model.Serie.GetId()))
    {
        Review writtenReview = review;
        <div class="review">
            <div class="reviewText p-1">
                <h3><b>@writtenReview.Title</b></h3>
                <p>
                    <i> Written by:</i>
                    <a asp-page="./UserProfilePage" asp-route-id="@writtenReview.ReviewWriter.GetId()" target="_blank">
                        @userController.GetUserByID(writtenReview.ReviewWriter.GetId()).Username
                    </a>
                </p>
                <div class="rating">
                    <span class="star @((@writtenReview.Rating >= 1) ? "gold" : "")">&#9733;</span>
                    <span class="star @((@writtenReview.Rating >= 2) ? "gold" : "")">&#9733;</span>
                    <span class="star @((@writtenReview.Rating >= 3) ? "gold" : "")">&#9733;</span>
                    <span class="star @((@writtenReview.Rating >= 4) ? "gold" : "")">&#9733;</span>
                    <span class="star @((@writtenReview.Rating >= 5) ? "gold" : "")">&#9733;</span>
                </div>
                <p>@writtenReview.ReviewContent</p>
                <p><i>Written on: @writtenReview.DateOfPublication.ToString("dd-MM-yyyy")</i></p>
            </div>
        </div>
    }
</div>


<script>
    var ctx = document.getElementById('popularityChart').getContext('2d');
    var popularityScores = @Html.Raw(Json.Serialize(Model.PopularityScores));

    // Get the last 7 days, including today
    var last7Days = [];
    for (var i = 6; i >= 0; i--) {
        var currentDate = new Date();
        currentDate.setDate(currentDate.getDate() - i);
        var formattedDate = currentDate.toLocaleDateString('en-US', { year: 'numeric', month: 'numeric', day: 'numeric' });
        last7Days.push(formattedDate);
    }

    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: last7Days,
            datasets: [{
                label: 'Popularity Scores',
                data: popularityScores,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
